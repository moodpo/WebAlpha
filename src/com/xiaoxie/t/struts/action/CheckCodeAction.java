/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.xiaoxie.t.struts.action;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

/** 
 * MyEclipse Struts
 * Creation date: 10-12-2010
 * 
 * XDoclet definition:
 * @struts.action
 */
public class CheckCodeAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int width =  70;
        int height=36;
        BufferedImage buffImg=new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);
        Graphics2D g=buffImg.createGraphics();
        Random random=new Random();
        g.setColor(getRandColor(180, 250));
        g.fillRect(0,0,width,height);
        Font font=new Font("Times New Roman",Font.PLAIN,28);    
        g.setFont(font);
        g.setColor(Color.BLACK);
        g.drawRect(0,0,width-1,height-1);
        g.setColor(Color.GRAY);
        for (int i=0;i<50;i++) {
	         int x = random.nextInt(width);
	         int y = random.nextInt(height);
	         int xl = random.nextInt(12);
	         int yl = random.nextInt(12);
	         g.drawLine(x,y,x+xl,y+yl);
        }
        StringBuffer randomCode=new StringBuffer();
        int length = 4;
        String base = "abcdefghijklmnopqrstuvwxyz0123456789";
             
        int size = base.length();
        for (int i=0;i<length;i++) {
           int start = random.nextInt(size);
           String strRand = base.substring(start, start + 1);
           g.setColor(getRandColor(1, 100));
           g.drawString(strRand,13*i+6,28);
           randomCode.append(strRand);
        }
        HttpSession session=request.getSession(true);
        session.setAttribute("rand",randomCode.toString());
        response.setHeader("Pragma","no-cache");
        response.setHeader("Cache-Control","no-cache");
        response.setDateHeader("Expires", 0);
        response.setContentType("image/jpeg");
        try {
	        ServletOutputStream sos=response.getOutputStream();
	        ImageIO.write(buffImg, "jpeg",sos);
	        sos.close();
        } catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	Color getRandColor(int fc,int bc){ //给定范围获得随机颜色
        Random random = new Random();
        if(fc>255) fc=255;
        if(bc>255) bc=255;
        int r=fc+random.nextInt(bc-fc);
        int g=fc+random.nextInt(bc-fc);
        int b=fc+random.nextInt(bc-fc);
        return new Color(r,g,b);
}  
}