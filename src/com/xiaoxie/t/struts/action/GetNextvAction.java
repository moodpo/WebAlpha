/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.xiaoxie.t.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.xiaoxie.t.result.MsgSet_PageNum;
import com.xiaoxie.t.result.User_MsgSet_PageNum;
import com.xiaoxie.t.service.MsgService;

/** 
 * MyEclipse Struts
 * Creation date: 10-19-2010
 * 
 * XDoclet definition:
 * @struts.action
 */
public class GetNextvAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session=request.getSession(false);
		User_MsgSet_PageNum vumspn=(User_MsgSet_PageNum)session.getAttribute("vumspn");
		int vuId=vumspn.getUser().getuId();
		String type=request.getParameter("type");
		String pages=request.getParameter("page");
		if(type.equals("down")){//向下翻页
			int nowPage=Integer.parseInt(pages);
			int allNum=new MsgService().getAllMsgNum(vuId);
			int pageSize=10;
			int pageNum=(allNum%pageSize==0)?(allNum/pageSize):(allNum/pageSize+1);
			if(nowPage>=pageNum){
				request.setAttribute("pageTishiv", "没有了！");
				return mapping.findForward("nohave");
			}
			MsgSet_PageNum mspn=new MsgService().getMsgSetByUId(vuId, nowPage+1, 10);
			vumspn.setMsgSet(mspn.getMsgSet());
			session.setAttribute("page", (nowPage+1));
		}else if(type.equals("up")){
			int nowPage=Integer.parseInt(pages);
			if(nowPage==1){
				return mapping.findForward("nohave");
			}else{
				MsgSet_PageNum mspn=new MsgService().getMsgSetByUId(vuId, nowPage-1, 10);
				vumspn.setMsgSet(mspn.getMsgSet());
				session.setAttribute("page", (nowPage-1));
			}
		}
		return mapping.findForward("nohave");
	}
}