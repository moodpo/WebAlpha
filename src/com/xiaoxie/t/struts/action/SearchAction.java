/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.xiaoxie.t.struts.action;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;

import com.xiaoxie.t.domain.HuaTi;
import com.xiaoxie.t.domain.Huaex;
import com.xiaoxie.t.domain.Msg;
import com.xiaoxie.t.domain.Users;
import com.xiaoxie.t.service.HuaTiService;
import com.xiaoxie.t.service.HuaexService;
import com.xiaoxie.t.service.MsgService;
import com.xiaoxie.t.service.UsersService;

/** 
 * MyEclipse Struts
 * Creation date: 10-21-2010
 * 
 * XDoclet definition:
 * @struts.action path="/search" name="searchForm" scope="request"
 */
public class SearchAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DynaActionForm searchForm = (DynaActionForm) form;// TODO Auto-generated method stub
		String type=searchForm.getString("type");
		String scon=searchForm.getString("scon");
		if(type==null || scon==null){//是从链接过来的
			type=request.getParameter("type");
			scon=request.getParameter("scon");
		}
		if(type.equals("huati")){//话题查询
			try {
				scon=new String(scon.getBytes("ISO-8859-1"),"UTF-8");
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			List<Msg> msgSet=new ArrayList<Msg>();
			List<HuaTi> htSet=new HuaTiService().findHuaTiByHuaTitle(scon);
			for (HuaTi huaTi : htSet) {
				int mId=huaTi.getmId();
				Msg msg=new MsgService().getMsgByMId(mId);
				msgSet.add(msg);
			}
			List<Huaex> heSet=new HuaexService().getHuaexByHTitle(scon);
			request.setAttribute("heSet", heSet);
			request.setAttribute("msgSet", msgSet);
			return mapping.findForward("huasucc");
		}else if(type.equals("neirong")){//内容查询
			try {
				scon=new String(scon.getBytes("ISO-8859-1"),"UTF-8");
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			int nowPage=1;
			int allnum=new MsgService().getMNumByMCon(scon);
			int pageSize=10;
			int pageNum=(allnum%pageSize==0)?(allnum/pageSize):(allnum/pageSize+1);
			if(request.getParameter("page")==null){
				nowPage=1;
			}else{
				nowPage=Integer.parseInt(request.getParameter("page"));
				if(request.getParameter("type").equals("up")){//上页
					if(nowPage>1)
						nowPage=nowPage-1;
				}else if(request.getParameter("type").equals("down")){
					if(nowPage<pageNum)
						nowPage=nowPage+1;
				}
			}
			List<Msg> msgSet=new MsgService().getMsgByMCon(scon,nowPage,pageSize);
			//分页
			request.setAttribute("scon", scon);
			request.setAttribute("pagenum", pageNum);
			request.setAttribute("page", nowPage);
			request.setAttribute("msgSet", msgSet);
			return mapping.findForward("neirongsucc");
		}else if(type.equals("yonghu")){//用户查询
			List<Users> userSet=new UsersService().getUsersByUName(scon);
			request.setAttribute("userSet", userSet);
			return mapping.findForward("yonghusucc");
		}else if(type.equals("htorm")){//话题的反向模糊查询
			String hTitle="";
			try {
				hTitle = new String(scon.getBytes("ISO-8859-1"),"UTF-8");
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			List<Msg> msgSet=new ArrayList<Msg>();
			List<HuaTi> htSet=new HuaTiService().findHuaTiByHtt(hTitle);
			for (HuaTi huaTi : htSet) {
				int mId=huaTi.getmId();
				Msg msg=new MsgService().getMsgByMId(mId);
				msgSet.add(msg);
			}
			request.setAttribute("msgSet", msgSet);
			List<Huaex> heSet=new HuaexService().getHuaexByHTitle(hTitle);
			request.setAttribute("heSet", heSet);
			return mapping.findForward("huasucc");
		}
		return null;
	}
}